version: '3.7'

services:
    minio:
        restart: always
        image: minio/minio:RELEASE.2023-11-20T22-40-07Z
        container_name: mlflow_s3
        expose:
            - "9000"
            - "9001"
        command: server /data --console-address ":9001"
        networks: 
            - storage
        environment:
            - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
            - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
        volumes:
            - type: bind
              source: /mnt/md0/minio
              target: /data
    
    create_mlflow_bucket:
        image: minio/mc:RELEASE.2023-11-20T16-30-59Z.fips
        depends_on:
            - minio
        container_name: create_mlflow_bucket
        networks: 
            - storage
        env_file:
            - .env
        entrypoint: >
            /bin/sh -c "
            until (/usr/bin/mc config host add minio http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY}) do echo '...waiting...' && sleep 1; done;
            /usr/bin/mc mb --ignore-existing minio/${MLFLOW_BUCKET_NAME}
            /usr/bin/mc policy set public minio/${MLFLOW_BUCKET_NAME};
            /usr/bin/mc mb --ignore-existing minio/${DATA_REPO_BUCKET_NAME};
            /usr/bin/mc policy download minio/${DATA_REPO_BUCKET_NAME};
            exit 0;
            "
    
    postgres:
        container_name: postgres_container
        build:
            context: ./pgvector
            dockerfile: Dockerfile.pgvector
        expose:
            - ${POSTGRES_PORT:-5432}
        ports:
            - "5432:5432"
        networks:
            - backend
            - common_network
        environment:
            - MUID=$UID
            - MGID=$GID
            - POSTGRES_DB=${POSTGRES_DB:-mlflowdb}
            - POSTGRES_USER=${POSTGRES_USER:-postgres}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changethispassword!}
        volumes:
            - db_datapg:/var/lib/postgresql/data_pg
        restart: always

    pgadmin:
        container_name: pgadmin_container
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-password}
            PGADMIN_CONFIG_SERVER_MODE: 'False'
            PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT}
        volumes:
            - pgadmin:/var/lib/pgadmin_data
        networks:
            - backend
        restart: always

    web:
        restart: always
        build: ./mlflow
        image: mlflow_server
        container_name: mlflow_server
        expose:
            - "5000"
        networks:
            - frontend
            - backend
            - storage
        environment:
            - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        command: mlflow server --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB} --default-artifact-root mlflow-artifacts:/ --artifacts-destination s3://${MLFLOW_BUCKET_NAME}/ --host 0.0.0.0        

    nginx:
        restart: always
        build: ./nginx
        image: mlflow_nginx
        container_name: mlflow_nginx
        ports:
            - "80:80"
            - "9000:9000"
            - "9001:9001"
            - "90:90"
        networks:
            - frontend
            - storage
            - backend
            - common_network
        depends_on:
            - web
            - minio

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge
    storage:
        driver: bridge
    common_network:
        external: true

volumes:
    db_datapg:
    minio:
    pgadmin:
