#!/bin/bash

# Function to install Miniconda
install_miniconda() {
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O Miniconda3-latest-Linux-x86_64.sh
    bash Miniconda3-latest-Linux-x86_64.sh -b -p $HOME/miniconda
    rm Miniconda3-latest-Linux-x86_64.sh
    export PATH="$HOME/miniconda/bin:$PATH"
    conda init
}

# Function to create and activate Conda environment
setup_conda_env() {
    conda create -y -n ray_env python=3.10
    source $HOME/miniconda/etc/profile.d/conda.sh
    conda activate ray_env
    pip install ray==2.31.0
    pip install ray[serve] fastapi requests
}

# Function to install Prometheus and Grafana
install_prometheus_grafana() {
    # Install Prometheus
    wget https://github.com/prometheus/prometheus/releases/download/v2.31.0/prometheus-2.31.0.linux-amd64.tar.gz
    tar -xvf prometheus-2.31.0.linux-amd64.tar.gz
    mv prometheus-2.31.0.linux-amd64 /etc/prometheus
    rm prometheus-2.31.0.linux-amd64.tar.gz

    # Install Grafana
    wget https://dl.grafana.com/oss/release/grafana-8.3.0.linux-amd64.tar.gz
    tar -xvf grafana-8.3.0.linux-amd64.tar.gz
    mv grafana-8.3.0 /usr/share/grafana
    rm grafana-8.3.0.linux-amd64.tar.gz
}

# Install Miniconda if not already installed
if [ ! -d "$HOME/miniconda" ]; then
    install_miniconda
fi

# Create and activate Conda environment
source $HOME/miniconda/etc/profile.d/conda.sh
if ! conda info --envs | grep -q "ray_env"; then
    setup_conda_env
else
    conda activate ray_env
fi

# Install Prometheus and Grafana if not already installed
if [ ! -d "/etc/prometheus" ] || [ ! -d "/usr/share/grafana" ]; then
    install_prometheus_grafana
fi

export RAY_GRAFANA_HOST="http://127.0.0.1:3000"

# Run Ray command based on the mode
if [ "$1" = "head" ]; then
    ray start --head --dashboard-host 0.0.0.0 --metrics-export-port=8080 --num-cpus=12
elif [ "$1" = "worker" ]; then
    ray start --address=$RAY_HEAD_IP:6379 --metrics-export-port=8080 --num-cpus=12
else
    exec "$@"
fi

# Give Ray some time to start and generate the necessary files
sleep 20

# Start Prometheus and Grafana using the configuration files generated by Ray
start_prometheus_grafana() {
    PROMETHEUS_CONFIG="/tmp/ray/session_latest/metrics/prometheus/prometheus.yml"
    GRAFANA_CONFIG="/tmp/ray/session_latest/metrics/grafana/grafana.ini"
    GRAFANA_PROVISIONING="/tmp/ray/session_latest/metrics/grafana/provisioning"

    if [ -f "$PROMETHEUS_CONFIG" ]; then
        /etc/prometheus/prometheus --config.file=$PROMETHEUS_CONFIG &
    else
        echo "Prometheus config file not found: $PROMETHEUS_CONFIG"
    fi

    if [ -f "$GRAFANA_CONFIG" ]; then
        if [ -d "$GRAFANA_PROVISIONING" ]; then
            /usr/share/grafana/bin/grafana-server --config $GRAFANA_CONFIG --homepath /usr/share/grafana/ &
        else
            echo "Grafana provisioning directory not found: $GRAFANA_PROVISIONING"
        fi
    else
        echo "Grafana config file not found: $GRAFANA_CONFIG"
    fi
}

# Start Prometheus and Grafana
start_prometheus_grafana

# Keep the container running
tail -f /dev/null
